{% import "_includes/forms" as forms %}

{% macro configWarning(setting) -%}
    {% set setting = '<code>'~setting~'</code>' %}
    {{ "This is being overridden by the {setting} config setting in your {file} config file."|t('contact-form', {
        setting: setting,
        file: 'contact-form-nuances.php'
    })|raw }}
{%- endmacro %}

{% from _self import configWarning %}

{{ forms.textField({
    first:        true,
    label:        "Cc Email"|t('contact-form-nuances'),
    id:           'ccEmail',
    name:         'ccEmail',
    instructions: "Separate multiple email addresses with commas."|t('contact-form-nuances'),
    value:        settings.ccEmail is iterable ? settings.ccEmail|join(', ') : settings.ccEmail,
    autofocus:    true,
    disabled:     'ccEmail' in overrides,
    warning:      'ccEmail' in overrides ? configWarning('ccEmail'),
    errors:       settings.getErrors('ccEmail'),
}) }}

{{ forms.textField({
    label:        "Cc Name"|t('contact-form-nuances'),
    id:           'ccName',
    name:         'ccName',
    instructions: "Separate multiple names with commas."|t('contact-form-nuances'),
    value:        settings.ccName is iterable ? settings.ccName|join(', ') : settings.ccName,
    disabled:     'ccName' in overrides,
    warning:      'ccName' in overrides ? configWarning('ccName'),
    errors:       settings.getErrors('ccName'),
}) }}

{{ forms.textField({
    label:        "Bcc Email"|t('contact-form-nuances'),
    id:           'bccEmail',
    name:         'bccEmail',
    instructions: "Separate multiple email addresses with commas."|t('contact-form-nuances'),
    value:        settings.bccEmail is iterable ? settings.bccEmail|join(', ') : settings.bccEmail,
    disabled:     'bccEmail' in overrides,
    warning:      'bccEmail' in overrides ? configWarning('bccEmail'),
    errors:       settings.getErrors('bccEmail'),
}) }}

{{ forms.lightswitchField({
    label:        "Hide Reply-To"|t('contact-form-nuances'),
    id:           'hideReplyTo',
    name:         'hideReplyTo',
    instructions: 'Disables the _Reply-To_ field completely (including the default behaviour of setting the ‘From’ email as the _Reply-To_ address).'|t('contact-form-nuances'),
    on:           settings.hideReplyTo,
    disabled:     'hideReplyTo' in overrides,
    warning:      'hideReplyTo' in overrides ? configWarning('hideReplyTo'),
    errors:       settings.getErrors('hideReplyTo'),
    reverseToggle:'replyToContainer',
}) }}

<div id="replyToContainer" class="nested-fields{% if settings.hideReplyTo %} hidden{% endif %}">
    {{ forms.textField({
        label:        "Reply-To Email"|t('contact-form-nuances'),
        id:           'replyToEmail',
        name:         'replyToEmail',
        instructions: "Separate multiple email addresses with commas."|t('contact-form-nuances'),
        value:        settings.replyToEmail is iterable ? settings.replyToEmail|join(', ') : settings.replyToEmail,
        placeholder:  'Contact Form sets this to the ‘From’ email by default.'|t('contact-form-nuances'),
        disabled:     'replyToEmail' in overrides,
        warning:      'replyToEmail' in overrides ? configWarning('replyToEmail'),
        errors:       settings.getErrors('replyToEmail'),
    }) }}
    
    {{ forms.textField({
        label:        "Reply-To Name"|t('contact-form-nuances'),
        id:           'replyToName',
        name:         'replyToName',
        instructions: "Separate multiple names with commas."|t('contact-form-nuances'),
        value:        settings.replyToName is iterable ? settings.replyToName|join(', ') : settings.replyToName,
        placeholder:  'Contact Form sets this to the ‘From’ name by default.'|t('contact-form-nuances'),
        disabled:     'replyToName' in overrides,
        warning:      'replyToName' in overrides ? configWarning('replyToName'),
        errors:       settings.getErrors('replyToName'),
    }) }}
</div>

{{ forms.lightswitchField({
    label:        "Plain Text Only"|t('contact-form-nuances'),
    id:           'plainTextOnly',
    name:         'plainTextOnly',
    instructions: 'Sends plain-text-only emails'|t('contact-form-nuances'),
    on:           settings.plainTextOnly,
    disabled:     'plainTextOnly' in overrides,
    warning:      'plainTextOnly' in overrides ? configWarning('plainTextOnly'),
    errors:       settings.getErrors('plainTextOnly'),
}) }}
